spring:
  datasource:
    url: jdbc:postgresql://postgres_sql-ecommerce:5432/ecommerce  # Use Docker service name
    username: username
    password: secret
    driver-class-name: org.postgresql.Driver  # Remove if using Spring Boot 3+

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  mail:
    host: mail_dev_ecommerce  # Use Docker service name
    port: 1025
    properties:
      mail:
        smtp:
          auth: false  # MailDev doesnâ€™t require authentication
          starttls:
            enable: false
          ssl:
            trust: "*"
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    check-template-location: true

application:
  mailing:
    frontend:
      activation-url: http://localhost:4200/activate-account

#  # Gmail SMTP Configuration (If needed for production)
#  gmail:
#    host: smtp.gmail.com
#    port: 587
#    username: hady@gmail.com
#    password: secret # Use an App Password, not your actual Gmail password!
#    properties:
#      mail:
#        smtp:
#          auth: true
#          starttls:
#            enable: true
